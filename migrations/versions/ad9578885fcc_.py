"""empty message

Revision ID: ad9578885fcc
Revises:
Create Date: 2024-12-03 23:52:11.242271

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'ad9578885fcc'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'user',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(length=64), nullable=False),
        sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(length=64), nullable=False),
        sa.Column('username', sqlmodel.sql.sqltypes.AutoString(length=128), nullable=False),
        sa.Column('password', sqlmodel.sql.sqltypes.AutoString(length=128), nullable=False),
        sa.Column('role', sa.Enum('ADMINISTRATOR', 'ORGANIZER', 'ATTENDEE', name='role'), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('username'),
    )
    op.create_table(
        'event',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=128), nullable=False),
        sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=1024), nullable=False),
        sa.Column('start_date', sa.DateTime(), nullable=False),
        sa.Column('end_date', sa.DateTime(), nullable=False),
        sa.Column('location', sqlmodel.sql.sqltypes.AutoString(length=256), nullable=False),
        sa.Column('capacity', sa.Integer(), nullable=False),
        sa.Column('status', sa.Enum('SCHEDULED', 'ONGOING', 'COMPLETED', 'CANCELLED', name='eventstatus'), nullable=False),
        sa.Column('organizer_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['organizer_id'], ['user.id']),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'registration',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('event_id', sa.Integer(), nullable=False),
        sa.Column('attendee_id', sa.Integer(), nullable=False),
        sa.Column('registration_date', sa.DateTime(), nullable=False),
        sa.Column('status', sa.Enum('CONFIRMED', 'PENDING', 'CANCELLED', name='registrationstatus'), nullable=False),
        sa.ForeignKeyConstraint(['attendee_id'], ['user.id']),
        sa.ForeignKeyConstraint(['event_id'], ['event.id']),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'resource',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=128), nullable=False),
        sa.Column('type', sa.Enum('EQUIPMENT', 'MATERIAL', 'SERVICE', name='resourcetype'), nullable=False),
        sa.Column('quantity_available', sa.Integer(), nullable=False),
        sa.Column('event_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['event_id'], ['event.id']),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'schedule',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('event_id', sa.Integer(), nullable=False),
        sa.Column('activity_title', sqlmodel.sql.sqltypes.AutoString(length=128), nullable=False),
        sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=1024), nullable=False),
        sa.Column('start_datetime', sa.DateTime(), nullable=False),
        sa.Column('end_datetime', sa.DateTime(), nullable=False),
        sa.Column('location', sqlmodel.sql.sqltypes.AutoString(length=256), nullable=False),
        sa.ForeignKeyConstraint(['event_id'], ['event.id']),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'attendance',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('registration_id', sa.Integer(), nullable=False),
        sa.Column('attendance_datetime', sa.DateTime(), nullable=False),
        sa.Column('confirmed', sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(['registration_id'], ['registration.id']),
        sa.PrimaryKeyConstraint('id'),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('attendance')
    op.drop_table('schedule')
    op.drop_table('resource')
    op.drop_table('registration')
    op.drop_table('event')
    op.drop_table('user')
    # ### end Alembic commands ###
